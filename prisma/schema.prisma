generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(cuid())
  name        String
  email       String
  phoneNumber String @map("phone_number")
  password    String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Folder   Folder[]
  File     File[]
  Icon     Icon[]
  Shared   Shared?  @relation(fields: [sharedId], references: [id])
  sharedId String?

  @@map("users")
}

model Folder {
  id          String  @id @default(cuid())
  name        String
  description String?

  parentId   String?  @map("parent_id")
  parent     Folder?  @relation("FolderToSubfolders", fields: [parentId], references: [id])
  subfolders Folder[] @relation("FolderToSubfolders")
  files      File[]
  isPinned   Boolean? @default(false) @map("is_pinned")

  iconId String?
  icon   Icon?   @relation(fields: [iconId], references: [id])

  status FOLDER?  @default(PUBLIC)
  Shared Shared[]

  userId    String   @map("created_by")
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("folders")
}

model Shared {
  id       String @id @default(cuid())
  folderId String
  folder   Folder @relation(fields: [folderId], references: [id])

  user User[]

  @@map("shared")
}

enum FOLDER {
  PRIVATE
  PUBLIC
}

model File {
  id        String @id @default(cuid())
  name      String
  extension String
  folderId  String @map("folder_id")
  folder    Folder @relation(fields: [folderId], references: [id])

  userId    String @map("created_by")
  createdBy User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("files")
}

model Icon {
  id  String  @id @default(cuid())
  src String
  alt String?

  userId    String @map("created_by")
  createdBy User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Folder Folder[]

  @@map("icons")
}
